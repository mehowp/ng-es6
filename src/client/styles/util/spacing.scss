@import "../variables";
@for $value from 1 to 21 {
    @each $breakpoint,
    $size in $baseSizes {
        @each $aliasFrom,
        $fromValue in $directions {
            @if $aliasFrom=='a' {

                .p-#{$aliasFrom} {
                    @if($breakpoint=='x') {
                        @if($value == 5) {
                        $final: calc((#{$value} * #{$size}) * #{$countBy});
                        padding: $final !important;
                        }
                    }
                }

                .p-#{$aliasFrom}-#{$value} {
                    @if($breakpoint=='x') {
                        $final: calc((#{$value} * #{$size}) * #{$countBy});
                        padding: $final !important;
                    }
                    @if($breakpoint !='x') {
                        &-#{$breakpoint} {
                            @include respond-to($breakpoint) {
                                $final: calc((#{$value} * #{$size}) * #{$countBy});
                                padding: $final !important;
                            }
                        }
                    }
                }


                .m-#{$aliasFrom} {
                    @if($breakpoint=='x') {
                        @if($value == 5) {
                        $final: calc((#{$value} * #{$size}) * #{$countBy});
                        margin: $final !important;
                        }
                    }
                }

                .m-#{$aliasFrom}-#{$value} {
                    @if($breakpoint=='x') {
                        $final: calc((#{$value} * #{$size}) * #{$countBy});
                        margin: $final !important;
                    }
                    @if($breakpoint !='x') {
                        &-#{$breakpoint} {
                            @include respond-to($breakpoint) {
                                $final: calc((#{$value} * #{$size}) * #{$countBy});
                                margin: $final !important;
                            }
                        }
                    }
                }


            }

            @if $aliasFrom !='a' {
                .m-#{$aliasFrom}-#{$value} {
                    @if($breakpoint=='x') {
                        $final: calc((#{$value} * #{$size}) * #{$countBy});
                        $final: calc((#{$value} * #{$size}) * #{$countBy});
                        margin-#{$fromValue}: $final !important;
                    }
                    @if($breakpoint !='x') {
                        &-#{$breakpoint} {
                            @include respond-to($breakpoint) {
                                $final: calc((#{$value} * #{$size}) * #{$countBy});
                                margin-#{$fromValue}: $final !important;
                            }
                        }
                    }
                }
                .p-#{$aliasFrom}-#{$value} {
                    @if($breakpoint=='x') {
                        $final: calc((#{$value} * #{$size}) * #{$countBy});
                        padding-#{$fromValue}: $final !important;
                    }
                    @if($breakpoint !='x') {
                        &-#{$breakpoint} {
                            @include respond-to($breakpoint) {
                                $final: calc((#{$value} * #{$size}) * #{$countBy});
                                padding-#{$fromValue}: $final !important;
                            }
                        }
                    }
                }
            }
        }
    }
}
